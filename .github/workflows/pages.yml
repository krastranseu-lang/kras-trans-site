name: pages

on:
  workflow_dispatch:
    inputs:
      purge_cache:
        description: 'Force cache-bust for assets (unused with auto-bust)'
        required: false
        default: 'false'
  push:
    branches: [ "main" ]
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
      - ".gitignore"
      - ".github/ISSUE_TEMPLATE/**"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: [self-hosted, macOS, x64]
    timeout-minutes: 15
    env:
      SITE_URL:             ${{ vars.SITE_URL }}
      GA_ID:                ${{ vars.GA_ID }}
      GSC_VERIFICATION:     ${{ vars.GSC_VERIFICATION }}
      INDEXNOW_KEY:         ${{ vars.INDEXNOW_KEY }}
      BING_SITE_AUTH_USER:  ${{ vars.BING_SITE_AUTH_USER }}
      NEWS_ENABLED:         ${{ vars.NEWS_ENABLED }}
      BUILD_ID:             ${{ github.run_id }}
      BUILD_NUM:            ${{ github.run_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Show commit info
        shell: bash
        run: |
          set -euo pipefail; set -x
          echo "ðŸ‘‰ Ref: $GITHUB_REF  SHA: $GITHUB_SHA  Actor: $GITHUB_ACTOR"
          git --no-pager log -1 --pretty='format:%h %ad %an  %s' --date=iso
          echo ""; echo "Changed files vs previous:"; git diff --name-only HEAD~1..HEAD || true

      - name: Install jq + zip + tree
        shell: bash
        run: |
          set -euo pipefail; set -x
          timeout 60s sudo apt-get update -y
          timeout 60s sudo apt-get install -y jq zip tree

      # ---------- Python ----------
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'

      - name: Install build deps (requirements + XLSX libs)
        shell: bash
        run: |
          set -euo pipefail; set -x
          python -V
          timeout 60s pip install --upgrade pip
          timeout 60s pip install -r requirements.txt
          timeout 60s pip install openpyxl unidecode

      # ---------- NAV from single XLSX (no GAS) ----------
      - name: Check XLSX presence
        shell: bash
        run: |
          set -euo pipefail; set -x
          test -f data/cms.xlsx || { echo "::error ::Missing data/cms.xlsx"; exit 1; }
          echo "Found data/cms.xlsx"

      - name: Generate static NAV from XLSX
        shell: bash
        run: |
          set -euo pipefail; set -x
          timeout 60s python tools/generate_nav_from_xlsx.py
          echo "Generated bundles:"
          ls -lah assets/nav || true

      - name: Upload NAV bundles (artifact, debug)
        if: hashFiles('assets/nav/*.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: nav-bundles-${{ github.run_id }}
          path: assets/nav/*.json
          retention-days: 3

      # ---------- sanity ----------
      - name: Sanity check (templates compile)
        shell: bash
        run: |
          set -euo pipefail; set -x
          python - <<'PY'
          from jinja2 import Environment, FileSystemLoader
          env = Environment(loader=FileSystemLoader('templates'))
          for t in ['base.html','page.html']:
              env.get_template(t)
          print("Templates OK")
          PY

      # ---------- build ----------
      - name: Build site (HTML + sitemapy/robots)
        env:
          SITE_URL: ${{ env.SITE_URL }}
          GA_ID: ${{ env.GA_ID }}
          GSC_VERIFICATION: ${{ env.GSC_VERIFICATION }}
          INDEXNOW_KEY: ${{ env.INDEXNOW_KEY }}
          BING_SITE_AUTH_USER: ${{ env.BING_SITE_AUTH_USER }}
          NEWS_ENABLED: ${{ env.NEWS_ENABLED }}
        shell: bash
        run: |
          set -euo pipefail; set -x
          timeout 60s python -u tools/build.py
          test -d dist || (echo "dist/ missing" && exit 1)
          tree -L 2 dist | sed -n '1,120p'

      - name: Smoke test dist
        shell: bash
        run: |
          set -euo pipefail; set -x
          test -f dist/index.html || (echo "Brak dist/index.html" && exit 1)
          test -f dist/robots.txt  || (echo "Brak dist/robots.txt" && exit 1)
          test -f dist/sitemap.xml || (echo "Brak dist/sitemap.xml" && exit 1)

      # ---------- cache-bust ----------
      - name: Cache-bust static assets (CSS/JS) in built HTML
        shell: bash
        env:
          BUST: ${{ github.run_number }}-${{ github.run_id }}
        run: |
          set -euo pipefail; set -x
          test -d dist || { echo "dist/ missing"; exit 1; }
          ASSETS=(
            "/assets/js/site.js"
            "/assets/js/cms.js"
            "/assets/css/site.css"
          )
          for P in "${ASSETS[@]}"; do
            echo ">> Busting $P"
            grep -RIl --include="*.html" -- "$P" dist | while read -r f; do
              sed -i -E "s#(${P})(\\?[^\"']*)?([\"'])#\\1?v=${BUST}\\3#g" "$f"
            done
          done
          echo "Preview of busted URLs:"
          grep -R --include="*.html" -nE "/assets/(css|js)/(site|cms)\\.(css|js)\\?v=" dist | head -n 20 || true

      - name: Make site snapshot (ZIP)
        shell: bash
        run: |
          set -euo pipefail; set -x
          timeout 60s bash -c 'cd dist && zip -q -r ../dist.zip .'
          ls -lah dist.zip

      - name: Upload site snapshot (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: site-snapshot-${{ github.run_id }}
          path: dist.zip
          retention-days: 5

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    timeout-minutes: 15
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
