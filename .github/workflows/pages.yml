name: Deploy to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq zip

      - name: Fetch CMS JSON from Apps Script
        env:
          APPS_URL: ${{ secrets.APPS_URL }}   # np. https://script.google.com/macros/s/AKfycb.../exec
          APPS_KEY: ${{ secrets.APPS_KEY }}   # identyczny jak API_KEY we Właściwościach skryptu
        run: |
          mkdir -p data
          curl -fsSL "$APPS_URL?key=$APPS_KEY" -o data/cms.json
          test -s data/cms.json || (echo "CMS JSON missing" && exit 1)
          [ "$(jq -r '.ok // empty' data/cms.json)" = "true" ] || (echo "Apps Script returned non-ok response" && cat data/cms.json && exit 1)
          echo "Updated: $(jq -r '.updated' data/cms.json)"
          echo "Pages:   $(jq -r '.pages | length' data/cms.json)"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install Jinja2 markdown beautifulsoup4 lxml

      - name: Sanity check (Jinja compile)
        run: |
          python - <<'PY'
          from jinja2 import Environment, FileSystemLoader
          env = Environment(loader=FileSystemLoader("templates"))
          env.get_template("page.html")  # fail fast jeśli błąd składni
          PY

      - name: Build site (HTML + sitemap/robots + zip)
        run: |
          python -u tools/build.py

      - name: Run audit (non-blocking)
        run: |
          python -u tools/audit.py || true

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: audit/report.md

      - name: Upload site snapshot (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: site-snapshot
          path: dist/download/site.zip

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
