name: Deploy to GitHub Pages (Kras-Trans)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build static site
    runs-on: ubuntu-latest
    permissions:
      contents: read

    env:
      # 1) Skąd pobieramy CMS JSON
      CMS_URL: ${{ secrets.SHEETS_JSON_URL }}

      # 2) Na pierwszy test – bez minify i bez precompress
      SKIP_MINIFY: "1"
      SKIP_PRECOMPRESS: "1"

      # 3) Opcjonalnie możesz nadpisać base URL (używane w <head>)
      SITE_URL: https://kras-trans.com

    steps:
      - name: Set up job
        run: echo "START build"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Show commit info
        run: |
          git log -1 --pretty=fuller --decorate

      - name: Install jq + zip + tree
        run: sudo apt-get update && sudo apt-get install -y jq zip tree

      - name: Preflight secrets check
        run: |
          test -n "${CMS_URL}" || echo "::warning::CMS_URL not set — użyję pustego cms.json"

      - name: Fetch CMS JSON from Apps Script (robust)
        run: |
          mkdir -p data
          if [ -n "${CMS_URL}" ]; then
            echo "Fetch ${CMS_URL}"
            curl -fsSL "${CMS_URL}" -o data/cms.json
          fi
          if [ ! -s data/cms.json ]; then
            echo "::warning::Brak CMS_URL lub pusty plik — tworzę minimalny cms.json"
            echo '{"ok":true,"pages":[]}' > data/cms.json
          fi
          echo "cms.json size: $(wc -c < data/cms.json) B"

      - name: Keep a copy of cms.json (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: cms.json
          path: data/cms.json
          if-no-files-found: error
          retention-days: 3

      - name: Setup Python 3.11 (LTS, koła dostępne)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install build deps (requirements.txt)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Sanity check (templates compile)
        run: |
          python - <<'PY'
          from jinja2 import Environment, FileSystemLoader, select_autoescape
          env = Environment(
            loader=FileSystemLoader("templates"),
            autoescape=select_autoescape(["html","xml"]),
            trim_blocks=True, lstrip_blocks=True
          )
          # spróbuj załadować główny szablon
          env.get_template("page.html")
          print("Templates OK")
          PY

      - name: Build site (HTML + sitemap/robots + ZIP)
        env:
          SITE_URL: ${{ env.SITE_URL }}
          SKIP_MINIFY: ${{ env.SKIP_MINIFY }}
          SKIP_PRECOMPRESS: ${{ env.SKIP_PRECOMPRESS }}
        run: |
          python tools/build.py \
            --site-url "${SITE_URL}" \
            --skip-minify "${SKIP_MINIFY}" \
            --skip-precompress "${SKIP_PRECOMPRESS}"

      - name: Smoke test dist
        run: |
          test -f dist/pl/index.html || (echo "Error: Missing dist/pl/index.html (home)"; exit 1)
          echo "Smoke test OK"
          tree -L 2 dist || true

      - name: Upload site snapshot (ZIP)
        uses: actions/upload-artifact@v4
        with:
          name: site-snapshot
          path: dist.zip
          if-no-files-found: error
          retention-days: 3

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
